---
import { type NavModel } from '@ts/Models'
interface Props {
  navItems: NavModel[];
}

const {navItems} = Astro.props;
---

<nav class="navbar" role="navigation" aria-label="main navigation">
  <div class="navbar-brand">
    <a role="button" class="navbar-burger box-shadow" data-target="navMenu" aria-label="menu" aria-expanded="false">
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
    </a>
  </div>
  <div id="navMenu" class="navbar-menu">
    <div class="navbar-start is-grouped">
        {
            navItems.map((item) => (
                <a class="button navbar-item is-fullwidth is-medium m-2 box-shadow" href={item.path}>{item.title}</a>
            ))
        }
    </div>
  </div>
</nav>

<script>
  let burgerListener = () => {
    let $burger = document.querySelector('.navbar-burger')
        $burger.addEventListener('click', () => {
          document.getElementById("navMenu").classList.toggle('is-active');
        })
  }

  document.addEventListener('DOMContentLoaded', burgerListener)
  document.addEventListener("astro:after-swap", burgerListener)
</script>

<style>
  .navbar-burger > span {
    height: 0.12em;
  }
</style>